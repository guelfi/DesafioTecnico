#!/bin/bash

# Script para iniciar API e Frontend
# Verifica e para qualquer servi√ßo rodando nas portas antes de iniciar

echo "üöÄ Iniciando todos os servi√ßos..."
echo ""

# Para servi√ßos existentes nas portas
echo "üîç Verificando portas 5000 e 5005..."

# Verifica porta 5000 (API)
PID_API=$(lsof -ti:5000)
if [ ! -z "$PID_API" ]; then
    echo "‚ö†Ô∏è  Parando servi√ßo na porta 5000 (PID: $PID_API)"
    kill -9 $PID_API
    sleep 1
fi

# Verifica porta 5005 (Frontend)
PID_FRONTEND=$(lsof -ti:5005)
if [ ! -z "$PID_FRONTEND" ]; then
    echo "‚ö†Ô∏è  Parando servi√ßo na porta 5005 (PID: $PID_FRONTEND)"
    kill -9 $PID_FRONTEND
    sleep 1
fi

echo "‚úÖ Portas liberadas"
echo ""

# Inicia API em background
echo "üîß Iniciando API na porta 5000..."
cd "$(dirname "$0")/../src/Api"
dotnet run &
API_PID=$!
echo "‚úÖ API iniciada (PID: $API_PID)"

# Aguarda um pouco para a API inicializar
sleep 3

# Inicia Frontend em background
echo "üé® Iniciando Frontend na porta 5005..."
cd "$(dirname "$0")/../src/Web"
npm run dev &
FRONTEND_PID=$!
echo "‚úÖ Frontend iniciado (PID: $FRONTEND_PID)"

echo ""
echo "üéâ Todos os servi√ßos foram iniciados!"
echo "üìç API: http://localhost:5000"
echo "üìç Frontend: http://localhost:5005"
echo ""
echo "Para parar os servi√ßos, pressione Ctrl+C"

# Aguarda sinal de interrup√ß√£o
trap 'echo "\nüõë Parando servi√ßos..."; kill $API_PID $FRONTEND_PID 2>/dev/null; exit' INT

# Mant√©m o script rodando
wait