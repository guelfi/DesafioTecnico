#!/bin/bash

echo "üîç MONITORANDO CHAMADAS DA API"
echo "================================"
echo "Este script monitora as chamadas para /pacientes"
echo "Abra o frontend e navegue entre as p√°ginas para ver as chamadas"
echo ""
echo "Pressione Ctrl+C para parar"
echo ""

# Monitorar logs da API (assumindo que est√° rodando em Docker ou localmente)
# Vamos simular chamadas para testar

echo "üìä TESTANDO CHAMADAS MANUAIS:"
echo ""

echo "1Ô∏è‚É£ P√°gina 1:"
curl -s "http://192.168.15.119:5000/pacientes?page=1&pageSize=10" | jq -r '"Data: \(.data | length) pacientes, Total: \(.total), P√°gina: \(.page)/\(.totalPages)"'

echo ""
echo "2Ô∏è‚É£ P√°gina 2:"
curl -s "http://192.168.15.119:5000/pacientes?page=2&pageSize=10" | jq -r '"Data: \(.data | length) pacientes, Total: \(.total), P√°gina: \(.page)/\(.totalPages)"'

echo ""
echo "3Ô∏è‚É£ P√°gina 3:"
curl -s "http://192.168.15.119:5000/pacientes?page=3&pageSize=10" | jq -r '"Data: \(.data | length) pacientes, Total: \(.total), P√°gina: \(.page)/\(.totalPages)"'

echo ""
echo "‚úÖ API est√° funcionando corretamente!"
echo ""
echo "üéØ AGORA TESTE NO FRONTEND:"
echo "1. Abra http://localhost:5005"
echo "2. V√° para Pacientes"
echo "3. Abra o Console do navegador (F12)"
echo "4. Navegue entre as p√°ginas"
echo "5. Verifique os logs no console"