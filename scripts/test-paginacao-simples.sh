#!/bin/bash

echo "üß™ TESTE COMPLETO DE PAGINA√á√ÉO"
echo "=================================================="

API_URL="http://192.168.15.119:5000"
FRONTEND_URL="http://localhost:5005"

echo ""
echo "1Ô∏è‚É£ TESTANDO API BACKEND"
echo "------------------------------"

# Teste p√°gina 1
echo -n "‚úÖ P√°gina 1 (10 itens): "
RESPONSE1=$(curl -s "${API_URL}/pacientes?page=1&pageSize=10")
COUNT1=$(echo $RESPONSE1 | grep -o '"data":\[.*\]' | grep -o '{"id"' | wc -l | tr -d ' ')
TOTAL1=$(echo $RESPONSE1 | grep -o '"total":[0-9]*' | cut -d':' -f2)
echo "${COUNT1} pacientes de ${TOTAL1} total"

# Teste p√°gina 2
echo -n "‚úÖ P√°gina 2 (10 itens): "
RESPONSE2=$(curl -s "${API_URL}/pacientes?page=2&pageSize=10")
COUNT2=$(echo $RESPONSE2 | grep -o '"data":\[.*\]' | grep -o '{"id"' | wc -l | tr -d ' ')
echo "${COUNT2} pacientes"

# Teste p√°gina 3
echo -n "‚úÖ P√°gina 3 (2 itens): "
RESPONSE3=$(curl -s "${API_URL}/pacientes?page=3&pageSize=10")
COUNT3=$(echo $RESPONSE3 | grep -o '"data":\[.*\]' | grep -o '{"id"' | wc -l | tr -d ' ')
echo "${COUNT3} pacientes"

echo ""
echo "2Ô∏è‚É£ TESTANDO FRONTEND"
echo "------------------------------"

# Teste frontend
FRONTEND_STATUS=$(curl -s -o /dev/null -w "%{http_code}" "$FRONTEND_URL" 2>/dev/null)
if [ "$FRONTEND_STATUS" = "200" ]; then
    echo "‚úÖ Frontend est√° rodando e acess√≠vel (HTTP $FRONTEND_STATUS)"
else
    echo "‚ùå Frontend n√£o est√° acess√≠vel (HTTP $FRONTEND_STATUS)"
fi

echo ""
echo "üéØ RESUMO FINAL"
echo "=============================="

if [ "$COUNT1" = "10" ] && [ "$COUNT2" = "10" ] && [ "$COUNT3" = "2" ] && [ "$TOTAL1" = "22" ] && [ "$FRONTEND_STATUS" = "200" ]; then
    echo "‚úÖ API Backend: FUNCIONANDO"
    echo "‚úÖ Frontend: ACESS√çVEL"
    echo ""
    echo "üéâ TUDO FUNCIONANDO!"
    echo ""
    echo "üìã PR√ìXIMOS PASSOS:"
    echo "1. Abrir o navegador em: http://localhost:5005"
    echo "2. Navegar para a p√°gina de Pacientes"
    echo "3. Verificar se a pagina√ß√£o est√° funcionando visualmente"
    echo "4. Testar navega√ß√£o entre p√°ginas"
    echo "5. Testar mudan√ßa de tamanho de p√°gina"
    echo ""
    echo "üîç ESTRUTURA ESPERADA NA TABELA:"
    echo "- Mostra '1-10 de 22' na primeira p√°gina"
    echo "- Bot√µes de navega√ß√£o habilitados"
    echo "- Total de 3 p√°ginas dispon√≠veis"
    echo "- √öltima p√°gina mostra '21-22 de 22'"
else
    echo "‚ùå PROBLEMAS ENCONTRADOS:"
    echo "   - P√°gina 1: $COUNT1 pacientes (esperado: 10)"
    echo "   - P√°gina 2: $COUNT2 pacientes (esperado: 10)"
    echo "   - P√°gina 3: $COUNT3 pacientes (esperado: 2)"
    echo "   - Total: $TOTAL1 pacientes (esperado: 22)"
    echo "   - Frontend: HTTP $FRONTEND_STATUS (esperado: 200)"
fi

echo ""
echo "üìä DADOS DE TESTE:"
echo "- Total de pacientes: 22"
echo "- P√°ginas com pageSize=10: 3 (10+10+2)"
echo "- API URL: ${API_URL}/pacientes"
echo "- Frontend URL: ${FRONTEND_URL}"