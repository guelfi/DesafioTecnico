name: Deploy to OCI VM

on:
  push:
    branches:
      - main
  workflow_dispatch: # Permite execução manual

jobs:
  deploy:
    name: Deploy MobileMed to OCI
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.OCI_SSH_PRIVATE_KEY }}

      - name: Add OCI VM to known hosts
        run: ssh-keyscan -H ${{ secrets.OCI_HOST }} >> ~/.ssh/known_hosts

      - name: Create project directory on OCI
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.OCI_HOST }} "
            sudo mkdir -p /var/www/DesafioTecnico
            sudo chown ubuntu:ubuntu /var/www/DesafioTecnico
          "

      - name: Sync project files to OCI
        run: |
          rsync -avz --delete \
            --exclude='.git' \
            --exclude='node_modules' \
            --exclude='bin' \
            --exclude='obj' \
            --exclude='.env.local*' \
            -e "ssh -o StrictHostKeyChecking=no" \
            ./ ubuntu@${{ secrets.OCI_HOST }}:/var/www/DesafioTecnico/

      - name: Deploy and build on OCI
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.OCI_HOST }} "
            set -e

            echo '🔧 Verificando/Instalando Docker e Docker Compose via script oficial...'
            if ! command -v docker &> /dev/null || ! docker compose version &> /dev/null;
            then
              echo 'Docker ou Docker Compose não funciona corretamente. Instalando a versão mais recente...'
              curl -fsSL https://get.docker.com -o get-docker.sh
              sudo sh get-docker.sh
              sudo usermod -aG docker ubuntu
            fi

            cd /var/www/DesafioTecnico
            
            echo '🚀 Iniciando deploy do MobileMed...'
            
            echo '🧹 Parando e removendo containers antigos...'
            sudo docker compose down --remove-orphans || true
            
            echo '🔨 Fazendo build e iniciando containers...'
            sudo docker compose up --build -d
            
            echo '⏳ Aguardando containers iniciarem...'
            sleep 20
            
            echo '📊 Verificando status dos containers...'
            sudo docker compose ps

            API_STATUS=$(sudo docker compose ps -q mobilemed-api | xargs -r docker inspect -f '{{.State.Status}}')
            if [ "$API_STATUS" != "running" ]; then
              echo '❌ ERRO: O container da API não iniciou corretamente. Verificando logs...'
              sudo docker compose logs mobilemed-api
              exit 1
            fi
            
            echo '🧹 Limpando imagens Docker não utilizadas...'
            sudo docker image prune -f
            
            echo '✅ Deploy concluído com sucesso!'
          "
